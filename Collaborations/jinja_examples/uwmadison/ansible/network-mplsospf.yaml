---
- name: NXOS OSPF MPLS Base Configuration
  # NB: for testing just limit to one host
  hosts: rn-*:&tags_enable_mpls
  gather_facts: false
  # Ansible collection ansible.netcommon
  connection: ansible.netcommon.network_cli
  # become: true
  # become_method: enable
  max_fail_percentage: 10
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    ansible_network_os: "cisco.nxos.nxos"
    # ansible_network_cli_ssh_type: libssh
    # ansible_command_timeout: 300
    # ansible_connect_timeout: 300
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ net_user.enable_password }}"
    # emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
    netbox_vrfs: "{{ query('netbox.netbox.nb_lookup', 'vrfs', api_filter='status=active tag=enable_mpls', api_endpoint=netbox_api, token=netbox_token)  }}"
    vrf_rds: "{{ netbox_vrfs | json_query('[].value.{name:name, rd:rd}')  }} "
    __doc__: |
      EXPERIMENTAL WIP Create MPLS OSPF / BGP configuration similar to `l3vpn` and `ns-crud` system.

      Using Netbox VRFs with tag `enable_mpls` and extracting the `rd` value(s) to template
      into `router ospf 10` and `router bgp 59`

      FIXME: move variables from play-local to `hosts.yml` inventory file
  tasks:
    # Using Ansible 2.9 built-in generic nxos_config text config module
    - name: Get Config from NetCMS
      set_fact:
        ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
    - name: "Add OSPF MPLS VRF"
      vars:
        __doc__: |
          Extract the `ospf_area` custom field from the Netbox VRF record and convert to IPv4 address format

          FIXME: where is router-id recorded/templated from

          FIXME: should store AS number in config context or Ansible group var

          FIXME: need IPv6 / OSPFv3 section

      cisco.nxos.nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents:
          - "router ospf 10"
          - "vrf {{ item.value.name }}"
        lines:
          # - "router-id "
          - "area {{ item.value.custom_fields.ospf_area | ansible.netcommon.ipaddr | default('0.0.0.0', True) }}"
          # - "redistribute bgp 59 route-map allow"
          - "log-adjacency-changes"
          - "passive-interface default"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
    - name: "Add BGP MPLS VRF"
      cisco.nxos.nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents:
          - "router bgp 59"
          - "vrf {{ item.value.name }}"
          - "address-family ipv4 unicast"
        lines:
          - "ospf 10"
          # - "redistribute ospf route-map allow"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
