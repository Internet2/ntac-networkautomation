---
- name: IOS-XE Smart Licensing Call-Home proxy config
  hosts: s-*:r-*:t-*:VG-*:&ios_17
  gather_facts: false
  connection: ansible.netcommon.network_cli
  # Should be auto-enabled
  become: "{{ 'False' if ansible_check_mode else 'True' }}"
  become_method: "ansible.netcommon.enable"
  serial:
    - 50
    - 100
    # - 500
  max_fail_percentage: 20
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    ansible_host_key_checking: false
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    ansible_network_os: "cisco.ios.ios"
    # ansible_network_cli_ssh_type: libssh
    ansible_network_cli_ssh_type: paramiko
    ansible_command_timeout: 300
    ansible_connect_timeout: 300
    emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
    enable_secret: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j enable') | from_json }}"
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ enable_secret.password }}"
    __doc__: |
      Set HTTP proxy config if Smart Licensing requires it as managed network devices ACLs
      prevent direct access to/from the Internet.

      FIXME: migrate playbook-local variables to shared `hosts.yml` to reduce duplication

      ### Example Ansible Inventory
      ```yaml
      all:
        vars:
          ansible_network_import_modules: true
          ansible_host_key_auto_add: true
          ansible_host_key_checking: false
          net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
          emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
          cms_service_ipv4: "192.0.2.101"
          cms_service_ipv6: "2001:db6::101"
        children:
          test:
            vars:
              cms_service_ipv4: "192.168.42.21"
              cms_service_ipv6: ""
          qa:
            vars:
              cms_service_ipv4: "146.151.144.26"
              cms_service_ipv6: "2607:f388:2:2000::1038"
          ios_17:
            children:
              # Inherited from Netbox inventory Device record Platform field.
              platforms_iosxe_bengaluru_17_06_03:
              platforms_iosxe_bengaluru_17_06_05:
              platforms_iosxe_17_6_5:
              platforms_iosxe_cupertino_17_09_03:
              platforms_iosxe_dublin_17_12_02:
              platforms_iosxe_dublin_17_12_03:
            vars:
              # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
              # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
              # Ansible collection ansible.netcommon and cisco.ios
              ansible_network_os: "cisco.ios.ios"
              # ansible_network_cli_ssh_type: libssh
              # ansible_network_cli_ssh_type: paramiko
              ansible_command_timeout: 300
              ansible_connect_timeout: 300
              ansible_user: "{{ net_user.username }}"
              ansible_password: "{{ net_user.password }}"
              ansible_become_password: "{{ net_user.enable_password }}"
      ```
  tasks:
    - name: Set ansible_net_config
      block:
        - name: Get Config from NetCMS
          set_fact:
            ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
            netcms_enabled: true
        - name: Get Minimal Facts
          cisco.ios.ios_facts:
            gather_subset: "min"
      rescue:
        - name: Disable NetCMS Check-in
          set_fact:
            netcms_enabled: false
        - name: Get Facts from live device
          cisco.ios.ios_facts:
            gather_subset: "config"
        - name: Show Facts from device (hostname, model, image, version)
          debug:
            msg: "DEBUG {{ inventory_hostname }} {{ ansible_net_hostname }} {{ ansible_net_model }} {{ ansible_net_image }} {{ ansible_net_version }}"

    - name: HTTP client proxy-server
      cisco.ios.ios_config:
        running_config: "{{ ansible_net_config }}"
        lines: "ip http client proxy-server {{ cms_service_ipv4 }} proxy-port 8080"
        save_when: never
      notify: "copy running-config startup-config"
    - name: Call-Home http-proxy
      cisco.ios.ios_config:
        running_config: "{{ ansible_net_config }}"
        parents:
          - "call-home"
        lines: "http-proxy \"{{ cms_service_ipv4 }}\" port 8080"
        save_when: never
      notify: "copy running-config startup-config"
  handlers:
    - name: copy running-config startup-config
      when: "not ansible_check_mode"
      cisco.ios.ios_command:
        commands:
          - "write memory"
        wait_for: "result[0] contains '[OK]'"
      ignore_errors: "{{ ansible_check_mode }}"
    - name: NetCMS Check-in
      listen: "copy running-config startup-config"
      when: "not ansible_check_mode and netcms_enabled"
      command:
        # chdir: "/home/net/cms/"
        argv:
          - "/usr/bin/make"
          - "-f"
          - "/home/net/cms/Makefile"
          - "logmsg=ansible configuration {{ ansible_play_name }} by {{ lookup('env', 'LOGNAME') }}"
          - "/home/net/cms/{{ inventory_hostname }}.update"
      delegate_to: localhost
      register: netcms_make_update
      failed_when: "'WARN' in netcms_make_update.stdout"
