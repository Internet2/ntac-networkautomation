---
- name: NXOS MPLS Base Configuration
  # NB: for testing just limit to one host
  hosts: rn-*:&tags_enable_mpls
  gather_facts: false
  # Ansible collection ansible.netcommon
  # connection: ansible.netcommon.network_cli
  # Ansible 2.9 built-in
  connection: network_cli
  # become: true
  # become_method: enable
  max_fail_percentage: 10
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    # ansible_network_os: "cisco.ios.ios"
    # ansible_network_cli_ssh_type: libssh
    # Ansible 2.9 built-in
    ansible_network_os: "nxos"
    # ansible_command_timeout: 300
    # ansible_connect_timeout: 300
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ net_user.enable_password }}"
    # emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
    netbox_vrfs: "{{ query('netbox.netbox.nb_lookup', 'vrfs', api_filter='status=active tag=enable_mpls', api_endpoint=netbox_api, token=netbox_token)  }}"
    vrf_rds: "{{ netbox_vrfs | json_query('[].value.{name:name, rd:rd}')  }} "
  tasks:
    # Using Ansible 2.9 built-in generic nxos_config text config module
    - name: Get Config from NetCMS
      set_fact:
        ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
    - name: "Add Route Descriptor to MPLS VRF"
      nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents: "vrf context {{ item.value.name }}"
        lines: "rd {{ item.value.rd }}"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
