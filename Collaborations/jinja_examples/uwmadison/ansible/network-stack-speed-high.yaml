---
- name: C9300X Stack Speed High
  # NB: for testing just limit to one host
  #hosts: s-cssclabqa-*:&device_types_c9300x_48hx
  hosts: s-*:r-*:&device_types_c9300x_48hx
  gather_facts: false
  # Ansible collection ansible.netcommon
  # connection: ansible.netcommon.network_cli
  # Ansible 2.9 built-in
  connection: network_cli
  become: yes
  become_method: enable
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    # ansible_network_os: "cisco.ios.ios"
    # ansible_network_cli_ssh_type: libssh
    # Ansible 2.9 built-in
    ansible_network_os: "ios"
    ansible_command_timeout: 300
    ansible_connect_timeout: 300
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ net_user.enable_password }}"
    netbox_devinfo: "{{ lookup('pipe','/usr/local/ns/bin/devinfo -j netbox-prod') | from_json }}"
    netbox_api: "{{ netbox_devinfo.connection_method }}://{{ netbox_devinfo.attributes.host }}:{{ netbox_devinfo.attributes.port }}/"
    netbox_token: "{{ netbox_devinfo.password }}"
    platform_family: "{{ platforms[0].split('-')[0] }}"
#    ansible_net_model: "{{ ??? set via ios_facts  }}"
    device_family: "{{ device_types[0] | regex_search('^(ap\\d\\d\\d|ws-c\\d+|c9\\d+x?)', '\\1') | first }}"
  tasks:
    # - name: Get Facts
    #   ios_facts:
    #     gather_subset: "min"
    - name: Get Config from NetCMS
      set_fact:
        ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
    - name: Set Stack-Speed High
      ios_config:
        running_config: "{{ ansible_net_config }}"
        lines:
          - "switch stack-speed high"
        save_when: never
      notify: "copy running-config startup-config"
  handlers:
    - name: copy running-config startup-config
      ios_command:
        commands:
          - "write memory"
        wait_for: "result[0] contains '[OK]'"
      ignore_errors: "{{ ansible_check_mode }}"
    - name: NetCMS Check-in
      listen: "copy running-config startup-config"
      command:
        # chdir: "/home/net/cms/"
        argv:
          - "/usr/bin/make"
          - "-f"
          - "/home/net/cms/Makefile"
          - "logmsg=ansible configuration {{ ansible_play_name }} by {{ lookup('env', 'LOGNAME') }}"
          - "/home/net/cms/{{ inventory_hostname }}.update"
      delegate_to: localhost
      register: netcms_make_update
      failed_when: "'WARN' in netcms_make_update.stdout"
