---
- name: IOS AAA RADIUS
  # NB: for testing just limit to one host
  hosts: s-*:r-*:t-*:VG-*
  gather_facts: false
  connection: ansible.netcommon.network_cli
  become: "{{ 'False' if ansible_check_mode else 'True' }}"
  become_method: ansible.netcommon.enable
  serial:
    - 50
    - 100
    # - 500
  max_fail_percentage: 10
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    ansible_network_os: "cisco.ios.ios"
    # ansible_network_cli_ssh_type: libssh
    ansible_network_cli_ssh_type: paramiko
    ansible_command_timeout: 300
    ansible_connect_timeout: 300
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ net_user.enable_password }}"
    emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
    enable_secret: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j enable') | from_json }}"
    radius_secret: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j radius') | from_json }}"
    netbox_devinfo: "{{ lookup('pipe','/usr/local/ns/bin/devinfo -j netbox-prod') | from_json }}"
    netbox_api: "{{ netbox_devinfo.connection_method }}://{{ netbox_devinfo.attributes.host }}:{{ netbox_devinfo.attributes.port }}/"
    netbox_token: "{{ netbox_devinfo.password }}"
    platform_family: "{{ platforms[0].split('-')[0] }}"
    device_family: "{{ device_types[0] | regex_search('^(ap\\d\\d\\d|ws-c\\d+|c9\\d+)', '\\1') | first }}"
    # netdevice_inventory: "{{ query('netbox.netbox.nb_lookup', 'devices', api_filter='status=active has_primary_ip=True', api_endpoint=netbox_api, token=netbox_token) }}"
    # netbox_vlans: "{{ query('netbox.netbox.nb_lookup', 'vlans', api_endpoint=netbox_api, token=netbox_token) | items2dict(key_name='key', value_name='value') }}"
    # ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
    # ansible_net_config: "{{ lookup('file', '/home/net/cms/' + inventory_hostname + '.conf') }}"
  tasks:
    - name: Set ansible_net_config
      block:
        - name: Get Config from NetCMS
          set_fact:
            ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
        - name: Enable NetCMS Check-in
          set_fact:
            netcms_enabled: true
        - name: Get Minimal Facts
          cisco.ios.ios_facts:
            gather_subset: "min"
      rescue:
        - name: Disable NetCMS Check-in
          set_fact:
            netcms_enabled: false
        - name: Get Facts from live device
          cisco.ios.ios_facts:
            gather_subset: "config"
        - name: Show Facts from device (hostname, model, image, version)
          debug:
            msg: "DEBUG {{ inventory_hostname }} {{ ansible_net_hostname }} {{ ansible_net_model }} {{ ansible_net_image }} {{ ansible_net_version }}"

    # - name: Debug Hostvars
    #   delegate_to: localhost
    #   blockinfile:
    #     path: "/var/local/tftp/ansible/{{ inventory_hostname }}.yaml"
    #     create: true
    #     block: |
    #       {{ hostvars | to_yaml }}

    - name: RADIUS Config on IOS 12.2(58)+ and IOS-XE
      when: "'12.2(58)' in ansible_net_version or ansible_net_version is version('15', 'gt') or ansible_net_version is version('4', 'lt')"
      block:
      - name: Remove old global RADIUS Key syntax
        when: "'radius-server key ' in ansible_net_config"
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          lines:
            - "no radius-server key"
          save_when: never
        notify: "copy running-config startup-config"
      - name: Remove old RADIUS Server syntax
        when: "'radius-server host ' in ansible_net_config and '12.2(58)' in ansible_net_version"
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          lines:
            - "no radius-server host {{ config_context[0].radius_doit_ns[0].ipv4 }} auth-port 1812 acct-port 1813"
            - "no radius-server host {{ config_context[0].radius_doit_ns[1].ipv4 }} auth-port 1812 acct-port 1813"
          save_when: never
        notify: "copy running-config startup-config"
      - name: Remove old RADIUS Server group syntax
        when: "' server ' + config_context[0].radius_doit_ns[0].ipv4 in ansible_net_config or ' server ' + config_context[0].radius_doit_ns[1].ipv4 in ansible_net_config"
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          parents: aaa group server radius RAD_SERVERS
          lines:
            - "no server {{ config_context[0].radius_doit_ns[0].ipv4 }} auth-port 1812 acct-port 1813"
            - "no server {{ config_context[0].radius_doit_ns[1].ipv4 }} auth-port 1812 acct-port 1813"
          save_when: never
        notify: "copy running-config startup-config"
      - name: AAA RADIUS Servers
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          parents: "radius server {{ item.name }}"
          lines:
            - "address ipv4 {{ item.ipv4 }} auth-port 1812 acct-port 1813"
            - "key 7 {{ radius_secret.enable_password }}"
          replace: block
          save_when: never
        with_items:
          - "{{ config_context[0].radius_doit_ns }}"
        notify: "copy running-config startup-config"
      - name: AAA RADIUS Global Config
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          lines:
            - "radius-server retransmit 1"
            - "radius-server timeout 3"
          save_when: never
        notify: "copy running-config startup-config"
      - name: AAA RAD_SERVERS Group
        cisco.ios.ios_config:
          running_config:  "{{ ansible_net_config }}"
          parents: aaa group server radius RAD_SERVERS
          lines:
            - "server name {{ config_context[0].radius_doit_ns[0].name }}"
            - "server name {{ config_context[0].radius_doit_ns[1].name }}"
          replace: block
          save_when: never
        notify: "copy running-config startup-config"

      - name: AAA AuthN AuthZ Accounting
        cisco.ios.ios_config:
          running_config:  "{{ ansible_net_config }}" 
          lines:
            - aaa new-model
            - aaa authentication login default group RAD_SERVERS local
            - aaa authentication enable default enable
            - aaa authorization exec default group RAD_SERVERS local
            # NB:  if we want SSH auth then we need to add a local user with a priv level but no password
            #    and change the AuthZ order eg: aaa authorization exec default local group RAD_SERVERS
            - aaa accounting exec default start-stop group RAD_SERVERS 
            - aaa session-id common
          save_when: never
        notify: "copy running-config startup-config"

      - name: AuthN Logging
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          lines:
            - login delay 1
            - login on-failure log
            - login on-success log
          save_when: never
        notify: "copy running-config startup-config"
      - name: SSH Access
        cisco.ios.ios_config:
          running_config: "{{ ansible_net_config }}"
          lines:
            - ip ssh time-out 30
            - ip ssh authentication-retries 2
            - ip ssh version 2
          save_when: never
        notify: "copy running-config startup-config"
      # FIXME:  I've tried two different ways to ssh into the target host after
      #         updating RADIUS but neither one works reliably, the underlying
      #         ssh command will exit with 255 status reported by sshpass
      #         or Error: TIMEOUT reported by clogin2 in most but not all of the
      #         target hosts, even though it works fine on the command line with
      #         one host, it doesn't work across sites_CSSC with maybe 50 hosts.
      # - name: Verify "net" user clogin test
      #   command:
      #     argv:
      #       - "/usr/local/ns/bin/clogin2"
      #       - "-f"
      #       - "/home/net/.cloginrc"
      #       - "-c"
      #       - "show version"
      #       - "-t"
      #       - "60"
      #       - "{{ inventory_hostname }}"
      #   register: radius_clogin_check
      #   failed_when: "'Error' in radius_clogin_check.stdout"
      #   check_mode: no
      #   changed_when: false
      #   delegate_to: localhost
      # - name: Verify "net" user sshpass test
      #   command:
      #     argv:
      #       - "/usr/bin/sshpass"
      #       - "-e"
      #       # - "-v"
      #       - "/usr/bin/ssh"
      #       - "-2"
      #       - "-4"
      #       - "-o"
      #       - "PreferredAuthentications=password"
      #       - "-o"
      #       - "CheckHostIP=no"
      #       - "-x"
      #       - "-a"
      #       - "-S"
      #       - "none"
      #       - "{{net_user.username }}@{{ inventory_hostname }}"
      #       - "exit"
      #   environment:
      #     SSHPASS: "{{ net_user.password }}"
      #   check_mode: no
      #   changed_when: false
      #   delegate_to: localhost
      #   tags:
      #     - sshpass
  handlers:
    - name: copy running-config startup-config
      when: "not ansible_check_mode"
      cisco.ios.ios_command:
        commands:
          - "write memory"
        wait_for: "result[0] contains '[OK]'"
      ignore_errors: "{{ ansible_check_mode }}"
    - name: NetCMS Check-in
      listen: "copy running-config startup-config"
      when: "not ansible_check_mode and netcms_enabled"
      command:
        # chdir: "/home/net/cms/"
        argv:
          - "/usr/bin/make"
          - "-f"
          - "/home/net/cms/Makefile"
          - "logmsg=ansible configuration {{ ansible_play_name }} by {{ lookup('env', 'LOGNAME') }}"
          - "/home/net/cms/{{ inventory_hostname }}.update"
      delegate_to: localhost
