---
- name: NXOS VRF Route Target
  # NB: for testing just limit to one host
  hosts: rn-*:&tags_enable_mpls
  gather_facts: false
  # Ansible collection ansible.netcommon
  connection: ansible.netcommon.network_cli
  # become: true
  # become_method: enable
  max_fail_percentage: 10
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_network_import_modules: true
    ansible_host_key_auto_add: true
    # ansible_private_key_file: "/home/net/.ssh/id_rsa.pub"
    # ansible_net_ssh_keyfile: "/home/net/.ssh/id_rsa.pub"
    # Ansible collection ansible.netcommon and cisco.ios
    ansible_network_os: "cisco.nxos.nxos"
    # ansible_network_cli_ssh_type: libssh
    # ansible_command_timeout: 300
    # ansible_connect_timeout: 300
    net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j ' + inventory_hostname) | from_json }}"
    # net_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency-' + inventory_hostname) | from_json }}"
    ansible_user: "{{ net_user.username }}"
    ansible_password: "{{ net_user.password }}"
    ansible_become_password: "{{ net_user.enable_password }}"
    # emergency_user: "{{ lookup('pipe', '/usr/local/ns/bin/devinfo -j emergency') | from_json }}"
    netbox_vrfs: "{{ query('netbox.netbox.nb_lookup', 'vrfs', api_filter='status=active tag=enable_mpls', api_endpoint=netbox_api, token=netbox_token)  }}"
    vrf_rds: "{{ netbox_vrfs | json_query('[].value.{name:name, rd:rd}')  }} "
    __doc__: |
      EXPERIMENTAL WIP Create MPLS OSPF Route Target configuration similar to `l3vpn` and `ns-crud` system.

      Using Netbox VRFs with tag `enable_mpls` and extracting the `rd` value(s) and `multicast_distro_tree` custom field when `enable_multicast` is set.

      FIXME: move variables from play-local to `hosts.yml` inventory file
  tasks:
    # - name: Get Facts
    #   nxos_facts:
    #     gather_subset: "min"
    #     # gather_subset: "config"
    #     # gather_network_resources: "all"

    # - name: debug
    #   debug:
    #     var: vrf_rds
    # Using latest cisco.nxos collection purpose-built nxos_vrf, nxos_vrf_af modules
    # - name: "Add Route Descriptor to MPLS VRF"
    #   cisco.nxos.nxos_vrf:
    #     aggregate: "{{ vrf_rds }}"
    #   notify: "copy running-config startup-config"
    #   register: vrf_cmd
    # - name: debug add
    #   debug:
    #     var: vrf_cmd
    # - name: "Add Route Targets to MPLS VRF"
    #   cisco.nxos.nxos_vrf_af:
    #     afi: "ipv4"
    #     vrf: "{{ item.name }}"
    #     route_targets:
    #       - direction: both
    #         rt: "{{ item.rd }}"
    #   register: vrf_af_cmd
    #   notify: "copy running-config startup-config"
    #   loop: "{{ vrf_rds }}"
    # - name: debug cmd
    #   debug:
    #     var: vrf_af_cmd

    # Using Ansible 2.9 built-in generic nxos_config text config module
    - name: Get Config from NetCMS
      set_fact:
        ansible_net_config: "{{ lookup('pipe', '/usr/bin/co -q -p /home/net/cms/' + inventory_hostname + '.conf') }}"
    - name: "Add Route Descriptor to MPLS VRF"
      cisco.nxos.nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents: "vrf context {{ item.value.name }}"
        lines:
          - "rd {{ item.value.rd }}"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
    - name: "Add Multiast Distribution Tree to MPLS VRF"
      when: "item.value.custom_fields.enable_multicast and item.value.custom_fields.multicast_distro_tree"
      cisco.nxos.nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents: "vrf context {{ item.value.name }}"
        lines:
          - "mdt default {{ item.value.custom_fields.multicast_distro_tree }}"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
    - name: "Add MPLS Route Targets to VRF"
      cisco.nxos.nxos_config:
        running_config: "{{ ansible_net_config }}"
        parents:
          - "vrf context {{ item.value.name }}"
          - "address-family ipv4 unicast"
        lines:
          # - "vrf context {{ item.value.name }}"
          # - "address-family ipv4 unicast"
          - "route-target import {{ item.value.rd }}"
          - "route-target export {{ item.value.rd }}"
        save_when: never
      with_dict: "{{ netbox_vrfs }}"
      notify: "copy running-config startup-config"
  handlers:
    - name: copy running-config startup-config
      cisco.nxos.nxos_command:
        commands:
          - "copy running-config startup-config"
    - name: NetCMS Check-in
      listen: "copy running-config startup-config"
      command:
        # chdir: "/home/net/cms/"
        argv:
          - "/usr/bin/make"
          - "-f"
          - "/home/net/cms/Makefile"
          - "logmsg=ansible configuration {{ ansible_play_name }} by {{ lookup('env', 'LOGNAME') }}"
          - "/home/net/cms/{{ inventory_hostname }}.update"
      delegate_to: localhost
      register: netcms_make_update
      failed_when: "'WARN' in netcms_make_update.stdout"
