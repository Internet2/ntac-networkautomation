policy-options {
    policy-statement {{ peer['vrf'] }}-vrf-from-{{ config['transit_vrf'] }} {
    {#    add any needed route filters in addition to the default route    #}
    {% for vrf in config['vrfs'] %}
      {% if vrf['name'] == peer['vrf'] and 'tags' in vrf and vrf['tags'] %}
        {% for this_tag in vrf['tags'] %}
          {% for t_vrf in config['vrfs'] %}
            {% if 'ipv4_filtered_prefixes' in t_vrf and t_vrf['ipv4_filtered_prefixes'] %}
              {% if this_tag in t_vrf['ipv4_filtered_prefixes'] and t_vrf['ipv4_filtered_prefixes'][this_tag] %}
        term import-tags-{{ t_vrf['name'] }}-{{ this_tag }} {
            from {
                prefix-list-filter {{ t_vrf['name'] }}-ipv4-filtered-prefixes-{{ this_tag }} orlonger;
            }
            then accept;
        }
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
      {% endif %}
    {% endfor %}
    {#    end of route filters   #}
        term import-default {
            from {
                route-filter 0.0.0.0/0 exact;
            }
            then accept;
        }
        term default-deny {
            then reject;
        }
    }
    policy-statement {{ peer['vrf'] }}-vrf-from-{{ config['transit_vrf'] }}-ipv6 {
    {#    add any needed route filters in addition to the default route    #}
    {% for vrf in config['vrfs'] %}
      {% if vrf['name'] == peer['vrf'] and 'tags' in vrf and vrf['tags'] %}
        {% for this_tag in vrf['tags'] %}
          {% for t_vrf in config['vrfs'] %}
            {% if 'ipv6_filtered_prefixes' in t_vrf and t_vrf['ipv6_filtered_prefixes'] %}
              {% if this_tag in t_vrf['ipv6_filtered_prefixes'] and t_vrf['ipv6_filtered_prefixes'][this_tag] %}
        term import-tags-{{ t_vrf['name'] }}-{{ this_tag }} {
            from {
                prefix-list-filter {{ t_vrf['name'] }}-ipv6-filtered-prefixes-{{ this_tag }} orlonger;
            }
            then accept;
        }
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endfor %}
      {% endif %}
    {% endfor %}
    {#    end of route filters   #}
        term import-default {
            from {
                route-filter ::/0 exact;
            }
            then accept;
        }
        term default-deny {
            then reject;
        }
    }
    policy-statement {{ peer['vrf'] }}-vrf-to-{{ config['transit_vrf'] }} {
  {% for vrf in config['vrfs'] %}
    {% if vrf['name'] == peer['vrf'] and vrf['receive_leaks'] == True %}
        term leaked-networks {
            from {
                prefix-list-filter leaked-ipv4-routed-prefixes exact;
                prefix-list-filter leaked-ipv4-other-prefixes orlonger;
            }
            then reject;
        }
    {% endif %}
  {% endfor %}
        term import-networks {
            from {
    {% for t_vrf in config['vrfs'] %}
      {% if t_vrf['name'] == peer['vrf'] and t_vrf['ipv4_routed_prefixes'] %}
                prefix-list-filter {{ peer['vrf'] }}-ipv4-routed-prefixes exact;
      {% endif %}
    {% endfor %}
    {% for t_vrf in config['vrfs'] %}
      {% if t_vrf['name'] == peer['vrf'] and t_vrf['ipv4_other_prefixes'] %}
                prefix-list-filter {{ peer['vrf'] }}-ipv4-other-prefixes orlonger;
      {% endif %}
    {% endfor %}
            }
            then accept;
        }
        term default-deny {
            then reject;
        }
    }
    policy-statement {{ peer['vrf'] }}-vrf-to-{{ config['transit_vrf'] }}-ipv6 {
  {% for vrf in config['vrfs'] %}
    {% if vrf['name'] == peer['vrf'] and vrf['receive_leaks'] == True %}
        term leaked-networks {
            from {
                prefix-list-filter leaked-ipv6-routed-prefixes exact;
                prefix-list-filter leaked-ipv6-other-prefixes orlonger;
            }
            then reject;
        }
    {% endif %}
  {% endfor %}
        term import-networks {
            from {
    {% for t_vrf in config['vrfs'] %}
      {% if t_vrf['name'] == peer['vrf'] and t_vrf['ipv6_routed_prefixes'] %}
                prefix-list-filter {{ peer['vrf'] }}-ipv6-routed-prefixes exact;
      {% endif %}
    {% endfor %}
    {% for t_vrf in config['vrfs'] %}
      {% if t_vrf['name'] == peer['vrf'] and t_vrf['ipv6_other_prefixes'] %}
                prefix-list-filter {{ peer['vrf'] }}-ipv6-other-prefixes orlonger;
      {% endif %}
    {% endfor %}
            }
            then accept;
        }
        term default-deny {
            then reject;
        }
    }
}
