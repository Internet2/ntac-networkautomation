{% if config['device_role'] in ["Collapsed-Core", "Core", "Distribution", "Services"] %}
  {% include 'shared-firewall-control-plane-evpn.j2' %}
{% elif config['device_role'] in ["Collapsed-Core", "WAN"] %}
  {% include 'shared-firewall-control-plane-wan.j2' %}
{% endif %}
policy-options {
    prefix-list mgmt_hosts {
        {% for mgmt_station in config['mgmt_hosts'] %}
        {{ mgmt_station }};
        {% endfor %}
    }
    prefix-list dns_servers {
        {% for dns_server in config['dns_servers'] %}
        {{ dns_server }};
        {% endfor %}
    }
    prefix-list ntp_servers {
        {% for ntp_server in config['ntp_servers'] %}
        {{ ntp_server }};
        {% endfor %}
    }
    prefix-list dhcp_servers { 
        {% for dhcp_server in config['dhcp_servers'] %}
        {{ dhcp_server }};
        {% endfor %}
    }
    prefix-list dns_hosts {
        apply-path "system name-server <*>";
    }
    prefix-list ntp_hosts {
        apply-path "system ntp server <*>";
    }
    prefix-list radius_hosts {
        apply-path "system radius-server <*>";
    }
    prefix-list radius_dot1x_hosts {
        apply-path "access radius-server <*>";
    }
    prefix-list snmp_clients {
        apply-path "snmp community <*> clients <*>";
    }
}
firewall {
    policer icmp-lo0-policer {
        filter-specific;
        if-exceeding {
            bandwidth-limit 500k;
            burst-size-limit 8k;
        }
        then discard;
    }
    family inet {
        filter mgmt-traffic {
            term from_localhost {
                from {
                    source-address {
                        127.0.0.1/32;
                        {{ config['mgmt_ip']['ip'] }}/32;
                    }
                }
                then accept;
            }
            term from_bgp {
                from {
                    source-prefix-list {
                    {% if config['device_role'] in ["Collapsed-Core", "Core", "Distribution", "Services"] %}
                        bgp_hosts_underlay; 
                        bgp_hosts_overlay; 
                    {% elif config['device_role'] in ["Collapsed-Core", "WAN"] %}
                        bgp_hosts_sns;
                        bgp_hosts_brs;
                        bgp_hosts_isps;
                        bgp_hosts_ddos;
                    {% endif %}
                    }
                    protocol tcp;
                    destination-port 179;
                }
                then accept;
            }
            term to_bgp {
                from {
                    source-prefix-list {
                    {% if config['device_role'] in ["Collapsed-Core", "Core", "Distribution", "Services"] %}
                        bgp_hosts_underlay; 
                        bgp_hosts_overlay; 
                    {% elif config['device_role'] in ["Collapsed-Core", "WAN"] %}
                        bgp_hosts_sns;
                        bgp_hosts_brs;
                        bgp_hosts_isps;
                        bgp_hosts_ddos;
                    {% endif %}
                    }
                    protocol tcp;
                    source-port 179;
                }
                then accept;
            }
            term from_dns_hosts {
                from {
                    source-prefix-list {
                        dns_hosts;
                    }
                    protocol udp;
                    source-port 53;
                }
                then accept;
            }
            term from_ntp_hosts {
                from {
                    source-prefix-list {
                        ntp_hosts;
                    }
                    protocol udp;
                    source-port ntp;
                }
                then accept;
            }
            term from_mgmt_hosts {
                from {
                    source-prefix-list {
                        mgmt_hosts;
                    }
                }
                then accept;
            }
            term from_snmp_clients {
                from {
                    source-prefix-list {
                        snmp_clients;
                    }
                    protocol udp;
                    destination-port snmp;
                }
                then accept;
            }
            term from_radius_hosts {
                from {
                    source-prefix-list {
                        radius_hosts;
                    }
                }
                then accept;
            }
            term from_radius_dot1x_hosts {
                from {
                    source-prefix-list {
                        radius_dot1x_hosts;
                    }
                }
                then accept;
            }
            {% if config['device_role'] in ["Collapsed-Core", "Core", "Distribution", "Services"] %}
            term routing {
                from {
                    source-prefix-list {
                        network-transport;
                    }                   
                }                       
                then accept;            
            }                           
            {% endif %}
            term icmp {
                from {
                    protocol icmp;
                }
                then {
                    policer icmp-lo0-policer;
                    accept;
                }
            }
            {% if config['device_role'] in ["Collapsed-Core", "Distribution"] %}
            term dhcp-relay {
                from {
                    protocol udp;
                    source-port [ 67 68 ];
                }
                then accept;
            }
            {% endif %}
        }
    }
}
interfaces {
    lo0 {
        unit 0 {
            family inet {
                filter {
                    input mgmt-traffic;
                }
            }
        }
    }
}

